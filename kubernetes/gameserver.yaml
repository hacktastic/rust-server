---
apiVersion: "stable.agones.dev/v1alpha1"
kind: GameServer
# GameServer Metadata
# https://v1-8.docs.kubernetes.io/docs/api-reference/v1.8/#objectmeta-v1-meta
metadata:
  # generateName: "gds-example" # generate a unique name, with the given prefix
  name: "rust-server" # set a fixed name
spec:
  # if there is more than one container, specify which one is the game server
  container: rust-server
  # portPolicy has two options:
  # - "dynamic" (default) the system allocates a free hostPort for the gameserver, for game clients to connect to
  # - "static", user defines the hostPort that the game client will connect to. Then onus is on the user to ensure that the
  # port is available. When static is the policy specified, `hostPort` is required to be populated
  portPolicy: "dynamic"
  # the port that is being opened on the game server process
  containerPort: 28015
  # the port exposed on the host, only required when `portPolicy` is "static". Overwritten when portPolicy is "dynamic".
  #hostPort: 7777
  # protocol being used. Defaults to UDP. TCP is the only other option
  protocol: UDP
  # Health checking for the running game server
  health:
    # Disable health checking. defaults to false, but can be set to true
    disabled: true
    # Number of seconds after the container has started before health check is initiated. Defaults to 5 seconds
    initialDelaySeconds: 5000
    # If the `Health()` function doesn't get called at least once every period (seconds), then
    # the game server is not healthy. Defaults to 5
    periodSeconds: 5000
    # Minimum consecutive failures for the health probe to be considered failed after having succeeded.
    # Defaults to 3. Minimum value is 1
    failureThreshold: 3000
  # Pod template configuration
  # https://v1-8.docs.kubernetes.io/docs/api-reference/v1.8/#podtemplate-v1-core
  template:
    # pod metadata. Name & Namespace is overwritten
    metadata:
      labels:
        myspeciallabel: myspecialvalue
    # Pod Specification
    spec:
      containers:
      - name: rust-server
        image: didstopia/rust-server
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /steamcmd/rust
          name: persistence-volume
      volumes:
      - name: persistence-volume
        hostPath: 
          path: /rust-data
          type: DirectoryOrCreate
